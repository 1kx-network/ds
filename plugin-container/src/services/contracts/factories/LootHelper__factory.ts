/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LootHelper, LootHelperInterface } from "../LootHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "lootContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getItems",
    outputs: [
      {
        internalType: "string[8]",
        name: "",
        type: "string[8]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lootContract",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "getItemsBatch",
    outputs: [
      {
        internalType: "string[8][]",
        name: "items",
        type: "string[8][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lootContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getLootIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "lootIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bbc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063610cc1571461004657806376c374931461006f578063dcda491a1461008f575b600080fd5b61005961005436600461080c565b6100af565b6040516100669190610aa4565b60405180910390f35b61008261007d3660046108f9565b610251565b6040516100669190610a8a565b6100a261009d36600461083e565b6106e2565b6040516100669190610a29565b6040516370a0823160e01b81526001600160a01b0382811660048301526060916000918516906370a082319060240160206040518083038186803b1580156100f657600080fd5b505afa15801561010a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012e91906109b2565b90508067ffffffffffffffff81111561015757634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610180578160200160208202803683370190505b50915060005b8181101561024957604051632f745c5960e01b81526001600160a01b03858116600483015260248201839052861690632f745c599060440160206040518083038186803b1580156101d657600080fd5b505afa1580156101ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020e91906109b2565b83828151811061022e57634e487b7160e01b600052603260045260246000fd5b602090810291909101015261024281610b49565b9050610186565b505092915050565b6102596107c8565b6000821161029f5760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a5908131bdbdd081251608a1b604482015260640160405180910390fd5b60408051610100810191829052639e41b73f60e01b9091526101048101839052806001600160a01b038516639e41b73f610124830160006040518083038186803b1580156102ec57600080fd5b505afa158015610300573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103289190810190610922565b8152602001846001600160a01b031663ef68075a856040518263ffffffff1660e01b815260040161035b91815260200190565b60006040518083038186803b15801561037357600080fd5b505afa158015610387573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103af9190810190610922565b8152602001846001600160a01b0316639720c969856040518263ffffffff1660e01b81526004016103e291815260200190565b60006040518083038186803b1580156103fa57600080fd5b505afa15801561040e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104369190810190610922565b8152602001846001600160a01b0316639bdc1b69856040518263ffffffff1660e01b815260040161046991815260200190565b60006040518083038186803b15801561048157600080fd5b505afa158015610495573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104bd9190810190610922565b8152602001846001600160a01b0316630e99990d856040518263ffffffff1660e01b81526004016104f091815260200190565b60006040518083038186803b15801561050857600080fd5b505afa15801561051c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105449190810190610922565b8152602001846001600160a01b031663d47f269e856040518263ffffffff1660e01b815260040161057791815260200190565b60006040518083038186803b15801561058f57600080fd5b505afa1580156105a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105cb9190810190610922565b8152602001846001600160a01b03166367209aa8856040518263ffffffff1660e01b81526004016105fe91815260200190565b60006040518083038186803b15801561061657600080fd5b505afa15801561062a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106529190810190610922565b8152602001846001600160a01b031663c08a5dd5856040518263ffffffff1660e01b815260040161068591815260200190565b60006040518083038186803b15801561069d57600080fd5b505afa1580156106b1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106d99190810190610922565b90529392505050565b6060815167ffffffffffffffff81111561070c57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561074557816020015b6107326107c8565b81526020019060019003908161072a5790505b50905060005b82518110156107c1576107858484838151811061077857634e487b7160e01b600052603260045260246000fd5b6020026020010151610251565b8282815181106107a557634e487b7160e01b600052603260045260246000fd5b6020026020010181905250806107ba90610b49565b905061074b565b5092915050565b6040518061010001604052806008905b60608152602001906001900390816107d85790505090565b80356001600160a01b038116811461080757600080fd5b919050565b6000806040838503121561081e578182fd5b610827836107f0565b9150610835602084016107f0565b90509250929050565b60008060408385031215610850578182fd5b610859836107f0565b915060208084013567ffffffffffffffff80821115610876578384fd5b818601915086601f830112610889578384fd5b81358181111561089b5761089b610b70565b8060051b91506108ac848301610ae8565b8181528481019084860184860187018b10156108c6578788fd5b8795505b838610156108e85780358352600195909501949186019186016108ca565b508096505050505050509250929050565b6000806040838503121561090b578182fd5b610914836107f0565b946020939093013593505050565b600060208284031215610933578081fd5b815167ffffffffffffffff8082111561094a578283fd5b818401915084601f83011261095d578283fd5b81518181111561096f5761096f610b70565b610982601f8201601f1916602001610ae8565b9150808252856020828501011115610998578384fd5b6109a9816020840160208601610b19565b50949350505050565b6000602082840312156109c3578081fd5b5051919050565b600082610100810183835b6008811015610a1e5783830387528151805180855260206109fb82828801838601610b19565b98890198601f91909101601f1916949094018401939290920191506001016109d5565b509095945050505050565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b82811015610a7d57603f19888603018452610a6b8583516109ca565b94509285019290850190600101610a4f565b5092979650505050505050565b602081526000610a9d60208301846109ca565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610adc57835183529284019291840191600101610ac0565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b1157610b11610b70565b604052919050565b60005b83811015610b34578181015183820152602001610b1c565b83811115610b43576000848401525b50505050565b6000600019821415610b6957634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea264697066735822122023f6f8bf78d105d34cdc6a072cc3dcad3753816490da35f5788ce2541dfe077a64736f6c63430008040033";

type LootHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LootHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LootHelper__factory extends ContractFactory {
  constructor(...args: LootHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LootHelper> {
    return super.deploy(overrides || {}) as Promise<LootHelper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LootHelper {
    return super.attach(address) as LootHelper;
  }
  connect(signer: Signer): LootHelper__factory {
    return super.connect(signer) as LootHelper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LootHelperInterface {
    return new utils.Interface(_abi) as LootHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LootHelper {
    return new Contract(address, _abi, signerOrProvider) as LootHelper;
  }
}

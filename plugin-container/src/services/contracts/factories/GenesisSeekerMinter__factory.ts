/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GenesisSeekerMinter,
  GenesisSeekerMinterInterface,
} from "../GenesisSeekerMinter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "relicAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "seekerAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "imageBaseURL",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "_baseCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_imageBaseURL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_maxRelicIdByType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_nextRelicIdByType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_relicCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes12",
        name: "",
        type: "bytes12",
      },
    ],
    name: "getAdditionalAttributes",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getImageBaseURL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes12",
        name: "data",
        type: "bytes12",
      },
    ],
    name: "getTokenOrderIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes12",
        name: "",
        type: "bytes12",
      },
    ],
    name: "getTokenProvenance",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "relicIds",
        type: "uint256[3]",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "baseCost",
        type: "uint256",
      },
      {
        internalType: "uint256[7]",
        name: "relicCosts",
        type: "uint256[7]",
      },
    ],
    name: "setCosts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newImageBaseURL",
        type: "string",
      },
    ],
    name: "setImageBaseURL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040526000608090815261015060a0526103f060c05261093060e0526118f06101005261333061012052616940610140526200004390600d9060076200026d565b506040805160e08101909152600d54819062000061906064620004d1565b8152602001600d6001015462000079906064620004d1565b8152602001600d6002015462000091906064620004d1565b8152602001600d60030154620000a9906064620004d1565b8152602001600d60040154620000c1906064620004d1565b8152602001600d60050154620000d9906064620004d1565b8152602001600d60060154620000f1906064620004d1565b905262000103906014906007620002b6565b503480156200011157600080fd5b5060405162001d9538038062001d958339810160408190526200013491620003d3565b6200013f336200021d565b600c805460ff1916600190811790915580546001600160a01b038086166001600160a01b0319928316179092556002805492851692909116919091179055805162000192906003906020840190620002e7565b506040805160e0810182526618de76816d80008152661550f7dca7000060208201526611c37937e0800091810191909152660e35fa931a00006060820152660aa87bee538000608082015266071afd498d000060a082015266038d7ea4c6800060c08201526200020790600490600762000363565b5050662386f26fc10000600b5550620005499050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8260078101928215620002a4579160200282015b82811115620002a4578251829061ffff1690559160200191906001019062000281565b50620002b29291506200039f565b5090565b8260078101928215620002a4579160200282015b82811115620002a4578251825591602001919060010190620002ca565b828054620002f590620004f6565b90600052602060002090601f016020900481019282620003195760008555620002a4565b82601f106200033457805160ff1916838001178555620002a4565b82800160010185558215620002a45791820182811115620002a4578251825591602001919060010190620002ca565b8260078101928215620002a4579160200282015b82811115620002a4578251829066ffffffffffffff1690559160200191906001019062000377565b5b80821115620002b25760008155600101620003a0565b80516001600160a01b0381168114620003ce57600080fd5b919050565b600080600060608486031215620003e8578283fd5b620003f384620003b6565b9250602062000404818601620003b6565b60408601519093506001600160401b038082111562000421578384fd5b818701915087601f83011262000435578384fd5b8151818111156200044a576200044a62000533565b604051601f8201601f19908116603f0116810190838211818310171562000475576200047562000533565b816040528281528a868487010111156200048d578687fd5b8693505b82841015620004b0578484018601518185018701529285019262000491565b82841115620004c157868684830101525b8096505050505050509250925092565b60008219821115620004f157634e487b7160e01b81526011600452602481fd5b500190565b600181811c908216806200050b57607f821691505b602082108114156200052d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61183c80620005596000396000f3fe6080604052600436106101095760003560e01c80633ccfd60b116100955780638da5cb5b116100645780638da5cb5b146102f8578063ac0841b914610320578063df9d9f5c14610333578063f264096014610353578063f2fde38b1461036957600080fd5b80633ccfd60b1461029957806345351fa4146102ae57806357f42510146102ce578063715018a6146102e357600080fd5b8063213e6e20116100dc578063213e6e20146101bf5780632abc55f6146101d4578063315d363e1461020557806336ec98ea146102255780633b7afad21461024557600080fd5b8063011940491461010e5780630c8f55041461015357806316c38b3c1461017557806316c61ccc14610195575b600080fd5b34801561011a57600080fd5b5061013d610129366004611604565b505060408051602081019091526000815290565b60405161014a9190611693565b60405180910390f35b34801561015f57600080fd5b5061017361016e366004611467565b610389565b005b34801561018157600080fd5b50610173610190366004611447565b6103d3565b3480156101a157600080fd5b50600c546101af9060ff1681565b604051901515815260200161014a565b3480156101cb57600080fd5b5061013d610410565b3480156101e057600080fd5b506101f76101ef366004611604565b60a01c919050565b60405190815260200161014a565b34801561021157600080fd5b506101f76102203660046115a0565b61049e565b34801561023157600080fd5b506101f76102403660046115a0565b6104b5565b34801561025157600080fd5b5061013d610260366004611604565b505060408051808201909152601781527f5468652043727970743a204368617074657220466f7572000000000000000000602082015290565b3480156102a557600080fd5b506101736104c5565b3480156102ba57600080fd5b506101f76102c93660046115a0565b610586565b3480156102da57600080fd5b5061013d610596565b3480156102ef57600080fd5b50610173610628565b34801561030457600080fd5b506000546040516001600160a01b03909116815260200161014a565b6101f761032e3660046113c5565b61065e565b34801561033f57600080fd5b5061017361034e3660046115d0565b610e81565b34801561035f57600080fd5b506101f7600b5481565b34801561037557600080fd5b50610173610384366004611386565b610ec2565b6000546001600160a01b031633146103bc5760405162461bcd60e51b81526004016103b3906116e6565b60405180910390fd5b80516103cf906003906020840190611263565b5050565b6000546001600160a01b031633146103fd5760405162461bcd60e51b81526004016103b3906116e6565b600c805460ff1916911515919091179055565b6003805461041d9061176f565b80601f01602080910402602001604051908101604052809291908181526020018280546104499061176f565b80156104965780601f1061046b57610100808354040283529160200191610496565b820191906000526020600020905b81548152906001019060200180831161047957829003601f168201915b505050505081565b600d81600781106104ae57600080fd5b0154905081565b600481600781106104ae57600080fd5b6000546001600160a01b031633146104ef5760405162461bcd60e51b81526004016103b3906116e6565b600080546040516001600160a01b039091169047908381818185875af1925050503d806000811461053c576040519150601f19603f3d011682016040523d82523d6000602084013e610541565b606091505b50509050806105835760405162461bcd60e51b815260206004820152600e60248201526d19985a5b1959081d1bc81cd95b9960921b60448201526064016103b3565b50565b601481600781106104ae57600080fd5b6060600380546105a59061176f565b80601f01602080910402602001604051908101604052809291908181526020018280546105d19061176f565b801561061e5780601f106105f35761010080835404028352916020019161061e565b820191906000526020600020905b81548152906001019060200180831161060157829003601f168201915b5050505050905090565b6000546001600160a01b031633146106525760405162461bcd60e51b81526004016103b3906116e6565b61065c6000610f56565b565b600c5460009060ff16156106a55760405162461bcd60e51b815260206004820152600e60248201526d1b5a5b9d1a5b99c81c185d5cd95960921b60448201526064016103b3565b600b546106b06112e7565b6106b8611305565b60005b60038110156109105761ffff8682600381106106e757634e487b7160e01b600052603260045260246000fd5b602002015111156108fe5760008061072c88846003811061071857634e487b7160e01b600052603260045260246000fd5b6020020151600f600882901c811692911690565b91509150600d8260ff166007811061075457634e487b7160e01b600052603260045260246000fd5b018054906000610763836117aa565b9190505588846003811061078757634e487b7160e01b600052603260045260246000fd5b6020020152601460ff8316600781106107b057634e487b7160e01b600052603260045260246000fd5b01548884600381106107d257634e487b7160e01b600052603260045260246000fd5b6020020151106108175760405162461bcd60e51b815260206004820152601060248201526f72656c696320756e6176696c61626c6560801b60448201526064016103b3565b60015460ff60a01b60a083901b16906001600160a01b031663763df5d8338b876003811061085557634e487b7160e01b600052603260045260246000fd5b60200201516040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526001600160a01b031984166044820152606401600060405180830381600087803b1580156108b057600080fd5b505af11580156108c4573d6000803e3d6000fd5b5050505060048360ff16600781106108ec57634e487b7160e01b600052603260045260246000fd5b01546108f8908861171b565b96505050505b80610908816117aa565b9150506106bb565b50610919611324565b60005b6003811015610cf35760015433906001600160a01b0316636352211e89846003811061095857634e487b7160e01b600052603260045260246000fd5b60200201516040518263ffffffff1660e01b815260040161097b91815260200190565b60206040518083038186803b15801561099357600080fd5b505afa1580156109a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cb91906113a9565b6001600160a01b031614610a165760405162461bcd60e51b8152602060048201526012602482015271756e617574686f72697a65642072656c696360701b60448201526064016103b3565b6001546000906001600160a01b031663bfbfccb2898460038110610a4a57634e487b7160e01b600052603260045260246000fd5b60200201516040518263ffffffff1660e01b8152600401610a6d91815260200190565b6101006040518083038186803b158015610a8657600080fd5b505afa158015610a9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abe9190611511565b905084816000015160078110610ae457634e487b7160e01b600052603260045260246000fd5b60200201805190610af4826117aa565b9052508051600290869060078110610b1c57634e487b7160e01b600052603260045260246000fd5b602002015110610b655760405162461bcd60e51b81526020600482015260146024820152736475706c69636174652072656c6963207479706560601b60448201526064016103b3565b6001546000906001600160a01b031663e7b2fdb48a8560038110610b9957634e487b7160e01b600052603260045260246000fd5b60200201516040518263ffffffff1660e01b8152600401610bbc91815260200190565b60206040518083038186803b158015610bd457600080fd5b505afa158015610be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0c91906115b8565b90506001858260108110610c3057634e487b7160e01b600052603260045260246000fd5b60200201818151610c41919061171b565b90525060e0820151610c5590859083610fa6565b6001549094506001600160a01b03166342966c688a8560038110610c8957634e487b7160e01b600052603260045260246000fd5b60200201516040518263ffffffff1660e01b8152600401610cac91815260200190565b600060405180830381600087803b158015610cc657600080fd5b505af1158015610cda573d6000803e3d6000fd5b5050505050508080610ceb906117aa565b91505061091c565b506000805b6010811015610d6757838260108110610d2157634e487b7160e01b600052603260045260246000fd5b6020020151848260108110610d4657634e487b7160e01b600052603260045260246000fd5b60200201511115610d55578091505b80610d5f816117aa565b915050610cf8565b5060ff811660c083015234851115610daf5760405162461bcd60e51b815260206004820152600b60248201526a199959481b9bdd081b595d60aa1b60448201526064016103b3565b84341115610def57336108fc610dc58734611758565b6040518115909202916000818181858888f19350505050158015610ded573d6000803e3d6000fd5b505b6002546040516347a90dcd60e01b81526001600160a01b03909116906347a90dcd90610e24903390600190879060040161163f565b602060405180830381600087803b158015610e3e57600080fd5b505af1158015610e52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7691906115b8565b979650505050505050565b6000546001600160a01b03163314610eab5760405162461bcd60e51b81526004016103b3906116e6565b600b829055610ebd6004826007611343565b505050565b6000546001600160a01b03163314610eec5760405162461bcd60e51b81526004016103b3906116e6565b6001600160a01b038116610f515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b3565b610583815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610fae611324565b60008083610fc257506000905060046110f9565b8360011415610fd757506000905060016110f9565b8360021415610fec57506000905060056110f9565b836003141561100157506001905060026110f9565b836004141561101657506002905060056110f9565b836005141561102b57506003905060046110f9565b836006141561104057506003905060056110f9565b836007141561105557506001905060046110f9565b836008141561106a57506000905060056110f9565b836009141561107f57506000905060036110f9565b83600a141561109457506000905060026110f9565b83600b14156110a957506001905060056110f9565b83600c14156110be57506002905060036110f9565b83600d14156110d357506002905060046110f9565b83600e14156110e857506001905060046110f9565b83600f14156110f957506001905060035b6001601386111561110c5750600461112a565b601186111561111d5750600361112a565b600e86111561112a575060025b8087846008811061114b57634e487b7160e01b600052603260045260246000fd5b6020020181815161115c9190611733565b60ff169052506008878482811061118357634e487b7160e01b600052603260045260246000fd5b602002015160ff1611156111c15760088784600881106111b357634e487b7160e01b600052603260045260246000fd5b60ff90921660209290920201525b808783600881106111e257634e487b7160e01b600052603260045260246000fd5b602002018181516111f39190611733565b60ff169052506008878382811061121a57634e487b7160e01b600052603260045260246000fd5b602002015160ff16111561125857600887836008811061124a57634e487b7160e01b600052603260045260246000fd5b60ff90921660209290920201525b509495945050505050565b82805461126f9061176f565b90600052602060002090601f01602090048101928261129157600085556112d7565b82601f106112aa57805160ff19168380011785556112d7565b828001600101855582156112d7579182015b828111156112d75782518255916020019190600101906112bc565b506112e3929150611371565b5090565b6040518060e001604052806007906020820280368337509192915050565b6040518061020001604052806010906020820280368337509192915050565b6040518061010001604052806008906020820280368337509192915050565b82600781019282156112d7579160200282015b828111156112d7578235825591602001919060010190611356565b5b808211156112e35760008155600101611372565b600060208284031215611397578081fd5b81356113a2816117f1565b9392505050565b6000602082840312156113ba578081fd5b81516113a2816117f1565b6000606082840312156113d6578081fd5b82601f8301126113e4578081fd5b6040516060810181811067ffffffffffffffff82111715611407576114076117db565b60405280836060810186101561141b578384fd5b835b600381101561143c57813583526020928301929091019060010161141d565b509195945050505050565b600060208284031215611458578081fd5b813580151581146113a2578182fd5b600060208284031215611478578081fd5b813567ffffffffffffffff8082111561148f578283fd5b818401915084601f8301126114a2578283fd5b8135818111156114b4576114b46117db565b604051601f8201601f19908116603f011681019083821181831017156114dc576114dc6117db565b816040528281528760208487010111156114f4578586fd5b826020860160208301379182016020019490945295945050505050565b6000610100808385031215611524578182fd5b6040519081019067ffffffffffffffff82118183101715611547576115476117db565b81604052835181526020840151602082015260408401516040820152606084015160608201526080840151608082015260a084015160a082015260c084015160c082015260e084015160e0820152809250505092915050565b6000602082840312156115b1578081fd5b5035919050565b6000602082840312156115c9578081fd5b5051919050565b6000806101008084860312156115e4578182fd5b833592508481850111156115f6578182fd5b506020830190509250929050565b60008060408385031215611616578182fd5b8235915060208301356001600160a01b031981168114611634578182fd5b809150509250929050565b6001600160a01b038416815260ff838116602080840191909152610140830191604084018560005b6008811015611686578151841683529184019190840190600101611667565b5050505050949350505050565b6000602080835283518082850152825b818110156116bf578581018301518582016040015282016116a3565b818111156116d05783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561172e5761172e6117c5565b500190565b600060ff821660ff84168060ff03821115611750576117506117c5565b019392505050565b60008282101561176a5761176a6117c5565b500390565b600181811c9082168061178357607f821691505b602082108114156117a457634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156117be576117be6117c5565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461058357600080fdfea26469706673582212209681771bb1a5b8af5aab419b0af4b0feeceacc33ab49a85c4aec889f6321b77164736f6c63430008040033";

type GenesisSeekerMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GenesisSeekerMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GenesisSeekerMinter__factory extends ContractFactory {
  constructor(...args: GenesisSeekerMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    relicAddress: string,
    seekerAddress: string,
    imageBaseURL: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GenesisSeekerMinter> {
    return super.deploy(
      relicAddress,
      seekerAddress,
      imageBaseURL,
      overrides || {}
    ) as Promise<GenesisSeekerMinter>;
  }
  getDeployTransaction(
    relicAddress: string,
    seekerAddress: string,
    imageBaseURL: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      relicAddress,
      seekerAddress,
      imageBaseURL,
      overrides || {}
    );
  }
  attach(address: string): GenesisSeekerMinter {
    return super.attach(address) as GenesisSeekerMinter;
  }
  connect(signer: Signer): GenesisSeekerMinter__factory {
    return super.connect(signer) as GenesisSeekerMinter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GenesisSeekerMinterInterface {
    return new utils.Interface(_abi) as GenesisSeekerMinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GenesisSeekerMinter {
    return new Contract(address, _abi, signerOrProvider) as GenesisSeekerMinter;
  }
}

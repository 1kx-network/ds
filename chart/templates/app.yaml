{{- range $.Values.apps }}
{{- $app := . }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name }}
  namespace: {{ $.Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .name }}
  replicas: {{ .replicas | default 1 }}
  template:
    metadata:
      labels:
        app: {{ .name }}
      {{- if .annotations }}
      annotations: {{ .annotations | toJson }}
      {{- end }}
    spec:
      containers:
        - name: {{ .name }}
          image: {{ .image | quote }}
          imagePullPolicy: IfNotPresent
          {{- if .env }}
          env: {{ .env | toJson }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .port | default 80 }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 3

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .name }}
  namespace: {{ $.Release.Namespace }}
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: {{ .name }}

---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: {{ .name }}
  namespace: {{ $.Release.Namespace }}
spec:
  endpoints:
  - dnsName: "{{ .name }}-{{ $.Release.Namespace }}.{{ $.Values.cluster.domain }}"
    recordTTL: 60
    recordType: "CNAME"
    targets: ["{{ $.Values.cluster.domain }}"]

---
apiVersion: "gateway.solo.io/v1"
kind: VirtualService
metadata:
  name: {{ .name }}
  namespace: {{ $.Release.Namespace }}
spec:
  virtualHost:
    domains: ["{{ .name }}-{{ $.Release.Namespace }}.{{ $.Values.cluster.domain }}"]
    routes:
    - matchers:
      - prefix: "/"
      routeAction:
        single:
          kube:
            ref:
              name: {{ .name }}
              namespace: {{ $.Release.Namespace }}
            port: 80
      options:
        timeout: 120s
        retries:
          retryOn: gateway-error
          numRetries: 3
          perTryTimeout: 120s
  sslConfig:
    secretRef:
      name: "cluster-domain-certificate"
      namespace: "ingress-system"

{{- end }}

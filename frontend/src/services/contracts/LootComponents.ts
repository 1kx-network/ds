/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface LootComponentsInterface extends utils.Interface {
  functions: {
    "chestComponents(uint256)": FunctionFragment;
    "footComponents(uint256)": FunctionFragment;
    "handComponents(uint256)": FunctionFragment;
    "headComponents(uint256)": FunctionFragment;
    "neckComponents(uint256)": FunctionFragment;
    "ringComponents(uint256)": FunctionFragment;
    "waistComponents(uint256)": FunctionFragment;
    "weaponComponents(uint256)": FunctionFragment;
    "weaponComponents2()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "chestComponents",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "footComponents",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "handComponents",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "headComponents",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "neckComponents",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "ringComponents",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "waistComponents",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "weaponComponents",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "weaponComponents2",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "chestComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "footComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "handComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "headComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "neckComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ringComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "waistComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "weaponComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "weaponComponents2",
    data: BytesLike
  ): Result;

  events: {};
}

export interface LootComponents extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: LootComponentsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    chestComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    footComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    handComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    headComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    neckComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    ringComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    waistComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    weaponComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    weaponComponents2(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  chestComponents(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  footComponents(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  handComponents(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  headComponents(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  neckComponents(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  ringComponents(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  waistComponents(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  weaponComponents(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  weaponComponents2(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    chestComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    footComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    handComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    headComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    neckComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    ringComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    waistComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    weaponComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    weaponComponents2(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    chestComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    footComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    handComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    headComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    neckComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ringComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    waistComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    weaponComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    weaponComponents2(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    chestComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    footComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    handComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    headComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    neckComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ringComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    waistComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    weaponComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    weaponComponents2(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface LootClassificationInterface extends utils.Interface {
  functions: {
    "ArmourLasLeatherIndex()": FunctionFragment;
    "ArmourLastMetalIndex()": FunctionFragment;
    "ChestLastClothIndex()": FunctionFragment;
    "ChestLastLeatherIndex()": FunctionFragment;
    "WeaponLastDarkIndex()": FunctionFragment;
    "WeaponLastHeavyIndex()": FunctionFragment;
    "WeaponLastMediumIndex()": FunctionFragment;
    "chestComponents(uint256)": FunctionFragment;
    "footComponents(uint256)": FunctionFragment;
    "getArmourMaterial(uint256)": FunctionFragment;
    "getArmourRank(uint256)": FunctionFragment;
    "getChestMaterial(uint256)": FunctionFragment;
    "getChestRank(uint256)": FunctionFragment;
    "getClass(uint8,uint256)": FunctionFragment;
    "getClassFromMaterial(uint8)": FunctionFragment;
    "getMaterial(uint8,uint256)": FunctionFragment;
    "getNeckRank(uint256)": FunctionFragment;
    "getRank(uint8,uint256)": FunctionFragment;
    "getRingRank(uint256)": FunctionFragment;
    "getWeaponMaterial(uint256)": FunctionFragment;
    "getWeaponRank(uint256)": FunctionFragment;
    "handComponents(uint256)": FunctionFragment;
    "headComponents(uint256)": FunctionFragment;
    "neckComponents(uint256)": FunctionFragment;
    "ringComponents(uint256)": FunctionFragment;
    "waistComponents(uint256)": FunctionFragment;
    "weaponComponents(uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "ArmourLasLeatherIndex",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ArmourLastMetalIndex",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ChestLastClothIndex",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ChestLastLeatherIndex",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "WeaponLastDarkIndex",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "WeaponLastHeavyIndex",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "WeaponLastMediumIndex",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "chestComponents",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "footComponents",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getArmourMaterial",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getArmourRank",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getChestMaterial",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getChestRank",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getClass",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getClassFromMaterial",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getMaterial",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getNeckRank",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRank",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRingRank",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getWeaponMaterial",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getWeaponRank",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "handComponents",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "headComponents",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "neckComponents",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "ringComponents",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "waistComponents",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "weaponComponents",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "ArmourLasLeatherIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ArmourLastMetalIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ChestLastClothIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ChestLastLeatherIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "WeaponLastDarkIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "WeaponLastHeavyIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "WeaponLastMediumIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "chestComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "footComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getArmourMaterial",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getArmourRank",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getChestMaterial",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getChestRank",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getClass", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getClassFromMaterial",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaterial",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNeckRank",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getRank", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getRingRank",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getWeaponMaterial",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getWeaponRank",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "handComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "headComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "neckComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ringComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "waistComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "weaponComponents",
    data: BytesLike
  ): Result;

  events: {};
}

export interface LootClassification extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: LootClassificationInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    ArmourLasLeatherIndex(overrides?: CallOverrides): Promise<[BigNumber]>;

    ArmourLastMetalIndex(overrides?: CallOverrides): Promise<[BigNumber]>;

    ChestLastClothIndex(overrides?: CallOverrides): Promise<[BigNumber]>;

    ChestLastLeatherIndex(overrides?: CallOverrides): Promise<[BigNumber]>;

    WeaponLastDarkIndex(overrides?: CallOverrides): Promise<[BigNumber]>;

    WeaponLastHeavyIndex(overrides?: CallOverrides): Promise<[BigNumber]>;

    WeaponLastMediumIndex(overrides?: CallOverrides): Promise<[BigNumber]>;

    chestComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    footComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    getArmourMaterial(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number]>;

    getArmourRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getChestMaterial(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number]>;

    getChestRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getClass(
      lootType: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number]>;

    getClassFromMaterial(
      material: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number]>;

    getMaterial(
      lootType: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number]>;

    getNeckRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getRank(
      lootType: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getRingRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getWeaponMaterial(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[number]>;

    getWeaponRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    handComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    headComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    neckComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    ringComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    waistComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;

    weaponComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]]>;
  };

  ArmourLasLeatherIndex(overrides?: CallOverrides): Promise<BigNumber>;

  ArmourLastMetalIndex(overrides?: CallOverrides): Promise<BigNumber>;

  ChestLastClothIndex(overrides?: CallOverrides): Promise<BigNumber>;

  ChestLastLeatherIndex(overrides?: CallOverrides): Promise<BigNumber>;

  WeaponLastDarkIndex(overrides?: CallOverrides): Promise<BigNumber>;

  WeaponLastHeavyIndex(overrides?: CallOverrides): Promise<BigNumber>;

  WeaponLastMediumIndex(overrides?: CallOverrides): Promise<BigNumber>;

  chestComponents(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  footComponents(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  getArmourMaterial(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number>;

  getArmourRank(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getChestMaterial(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number>;

  getChestRank(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getClass(
    lootType: BigNumberish,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number>;

  getClassFromMaterial(
    material: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number>;

  getMaterial(
    lootType: BigNumberish,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number>;

  getNeckRank(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getRank(
    lootType: BigNumberish,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getRingRank(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getWeaponMaterial(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<number>;

  getWeaponRank(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  handComponents(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  headComponents(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  neckComponents(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  ringComponents(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  waistComponents(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  weaponComponents(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

  callStatic: {
    ArmourLasLeatherIndex(overrides?: CallOverrides): Promise<BigNumber>;

    ArmourLastMetalIndex(overrides?: CallOverrides): Promise<BigNumber>;

    ChestLastClothIndex(overrides?: CallOverrides): Promise<BigNumber>;

    ChestLastLeatherIndex(overrides?: CallOverrides): Promise<BigNumber>;

    WeaponLastDarkIndex(overrides?: CallOverrides): Promise<BigNumber>;

    WeaponLastHeavyIndex(overrides?: CallOverrides): Promise<BigNumber>;

    WeaponLastMediumIndex(overrides?: CallOverrides): Promise<BigNumber>;

    chestComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    footComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    getArmourMaterial(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    getArmourRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getChestMaterial(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    getChestRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getClass(
      lootType: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    getClassFromMaterial(
      material: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    getMaterial(
      lootType: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    getNeckRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRank(
      lootType: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRingRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getWeaponMaterial(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<number>;

    getWeaponRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    handComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    headComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    neckComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    ringComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    waistComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;

    weaponComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber, BigNumber]>;
  };

  filters: {};

  estimateGas: {
    ArmourLasLeatherIndex(overrides?: CallOverrides): Promise<BigNumber>;

    ArmourLastMetalIndex(overrides?: CallOverrides): Promise<BigNumber>;

    ChestLastClothIndex(overrides?: CallOverrides): Promise<BigNumber>;

    ChestLastLeatherIndex(overrides?: CallOverrides): Promise<BigNumber>;

    WeaponLastDarkIndex(overrides?: CallOverrides): Promise<BigNumber>;

    WeaponLastHeavyIndex(overrides?: CallOverrides): Promise<BigNumber>;

    WeaponLastMediumIndex(overrides?: CallOverrides): Promise<BigNumber>;

    chestComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    footComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getArmourMaterial(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getArmourRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getChestMaterial(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getChestRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getClass(
      lootType: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getClassFromMaterial(
      material: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaterial(
      lootType: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getNeckRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRank(
      lootType: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRingRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getWeaponMaterial(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getWeaponRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    handComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    headComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    neckComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ringComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    waistComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    weaponComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    ArmourLasLeatherIndex(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ArmourLastMetalIndex(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ChestLastClothIndex(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ChestLastLeatherIndex(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    WeaponLastDarkIndex(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    WeaponLastHeavyIndex(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    WeaponLastMediumIndex(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    chestComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    footComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getArmourMaterial(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getArmourRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getChestMaterial(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getChestRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getClass(
      lootType: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getClassFromMaterial(
      material: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMaterial(
      lootType: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getNeckRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRank(
      lootType: BigNumberish,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRingRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getWeaponMaterial(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getWeaponRank(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    handComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    headComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    neckComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ringComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    waistComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    weaponComponents(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}

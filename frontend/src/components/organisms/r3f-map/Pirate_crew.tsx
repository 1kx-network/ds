/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./pirate_crew.gltf --types --transform
*/

import * as THREE from 'three';
import React, { useMemo, useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import * as SkeletonUtils from 'three/examples/jsm/utils/SkeletonUtils.js';
import { useGraph } from '@react-three/fiber';

function useSkinnedMeshClone(path: string) {
    const { scene, materials, animations } = useGLTF(path) as GLTFResult;
    const clonedScene = useMemo(() => SkeletonUtils.clone(scene), [scene]);
    const { nodes } = useGraph(clonedScene);

    return { scene: clonedScene, materials, animations, nodes };
}

type GLTFResult = GLTF & {
    nodes: {
        armLeft_1: THREE.Mesh;
        armRight_1: THREE.Mesh;
        body_1_1: THREE.Mesh;
        body_1_2: THREE.Mesh;
        body_1_3: THREE.Mesh;
        body_1_4: THREE.Mesh;
        Group_143_1: THREE.Mesh;
        Group_143_2: THREE.Mesh;
        Group_143_3: THREE.Mesh;
        legLeft_1_1: THREE.Mesh;
        legLeft_1_2: THREE.Mesh;
        legRight_1_1: THREE.Mesh;
        legRight_1_2: THREE.Mesh;
    };
    materials: {
        wood: THREE.MeshStandardMaterial;
        textile: THREE.MeshStandardMaterial;
        sand: THREE.MeshStandardMaterial;
        _defaultMat: THREE.MeshStandardMaterial;
        iron: THREE.MeshStandardMaterial;
        textileRed: THREE.MeshStandardMaterial;
    };
};

type GroupProps = JSX.IntrinsicElements['group'];

interface ModelProps extends GroupProps {
    color: string;
}

export function Model({ color, onClick, ...groupProps }: ModelProps) {
    const { nodes, materials } = useSkinnedMeshClone('/pirate_crew-transformed.glb') as GLTFResult;
    return (
        <group {...groupProps} dispose={null} onClick={onClick}>
            <group position={[0, 0, 0]} scale={0.1}>
                <mesh geometry={nodes.armLeft_1.geometry} material={materials.wood} position={[-0.17, 0.7, 0]}>
                    <meshPhongMaterial color={color} />
                </mesh>
                <mesh geometry={nodes.armRight_1.geometry} material={materials.wood} position={[0.17, 0.7, 0]}>
                    <meshPhongMaterial color={color} />
                </mesh>
                <group position={[0, 0.41, 0]}>
                    <mesh geometry={nodes.body_1_1.geometry} material={materials.wood}>
                        <meshPhongMaterial color={color} />
                    </mesh>

                    <mesh geometry={nodes.body_1_2.geometry} material={materials.textile}>
                        <meshPhongMaterial color={color} />
                    </mesh>
                    <mesh geometry={nodes.body_1_3.geometry} material={materials.sand}>
                        <meshPhongMaterial color={color} />
                    </mesh>
                    <mesh geometry={nodes.body_1_4.geometry} material={materials._defaultMat}>
                        <meshPhongMaterial color={color} />
                    </mesh>
                </group>
                <group position={[0, 0.78, 0]}>
                    <mesh geometry={nodes.Group_143_1.geometry} material={materials.wood}>
                        <meshPhongMaterial color={color} />
                    </mesh>
                    <mesh geometry={nodes.Group_143_2.geometry} material={materials.iron}>
                        <meshPhongMaterial color={color} />
                    </mesh>
                    <mesh
                        geometry={nodes.Group_143_3.geometry}
                        material={materials.textileRed}
                        position={[0.13, 0.19, -0.14]}
                        rotation={[0.26, 0, 0]}
                        scale={0.93}
                    >
                        <meshPhongMaterial color={color} />
                    </mesh>
                </group>
                <group position={[-0.16, 0.41, 0]}>
                    <mesh geometry={nodes.legLeft_1_1.geometry} material={materials.textile}>
                        <meshPhongMaterial color={color} />
                    </mesh>
                    <mesh geometry={nodes.legLeft_1_2.geometry} material={materials.wood}>
                        <meshPhongMaterial color={color} />
                    </mesh>
                </group>
                <group position={[0.16, 0.41, 0]}>
                    <mesh geometry={nodes.legRight_1_1.geometry} material={materials.textile}>
                        <meshPhongMaterial color={color} />
                    </mesh>
                    <mesh geometry={nodes.legRight_1_2.geometry} material={materials.wood}>
                        <meshPhongMaterial color={color} />
                    </mesh>
                </group>
            </group>
        </group>
    );
}

useGLTF.preload('/pirate_crew-transformed.glb');

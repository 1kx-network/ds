mutation signin($gameID: ID!, $session: String!, $ttl: Int!, $scope: String!, $auth: String!) {
    signin(gameID: $gameID, session: $session, ttl: $ttl, scope: $scope, authorization: $auth)
}

mutation signout($gameID: ID!, $session: String!, $auth: String!) {
    signout(gameID: $gameID, session: $session, authorization: $auth)
}

mutation dispatch($gameID: ID!, $actions: [String!]!, $auth: String!) {
    dispatch(
        gameID: $gameID
        actions: $actions # encoded action bytes
        authorization: $auth # session's signature of $action
    ) {
        id
        status
    }
}

fragment IncomingBlock on BlockEvent {
    id
    block
    simulated
    logs
    resync
}

subscription OnEvent($gameID: ID!) {
    events(gameID: $gameID, simulated: true) {
        ...IncomingBlock
    }
}

query GetSync($gameID: ID!, $block: Int!) {
    game(id: $gameID) {
        id
        name
        dispatcher {
            id
        }
        router {
            id
        }
        state(simulated: true, block: $block) {
            id
            block
            json
        }
    }
}
